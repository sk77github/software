binlog server（共享存储？）+ Semi-Synchronous Replication  +   GTID   + MHA  + LVS + Keeplived + 中间件（读写分离，水平分表）
怎么搞分布式事务？

---------------------------------------------------------------------------------------------------------
分布式环境判断的推模式与拉模式：
MHA属于拉模式，mha要获取mysql master的信息。
zookeeper（分布式锁）属于推模式，mysql或者其他软件需要向zookeeper注册，抢锁。（分布式锁服务实现主节点选举大致如下：
主节点和备节点到Chubby中抢锁，抢到锁的节点在锁的有效期(Lease期)内提供服务，当主节点锁的Lease快要到期时，主节点申请延长锁的超时时间，
正常情况下分布式锁服务总是优先满足主节点的请求，当主节点出现故障时，备节点能够抢到锁切换为主节点提供服务。
）



-------------------------------------------------------------------------------------------------------------------------
MHA:
When you add/remove slaves, you should update the config file and had better restart MHA.需要调整的项:
secondary_check_script


to avoid split brain：
1，Power off the dead master
参数：shutdown_script
2，
参数：secondary_check_script
例子：secondary_check_script=masterha_secondary_check -s remote_host1 -s remote_host2
https://github.com/matthewbogner/mysql-master-ha/issues/92
by setting -s remote_host1. In that case MHA fails to connect to the remote host and 
does not start failover. Failover does not start, but this is much better than split brain.
tips： remote_host1 and remote_host2 should be located on different network segments from MHA Manager and MySQL servers.
如何避免脑裂：
当MHA Manager检测master失败后，不会立即判断该master已宕机（需要多个网络路由验证），而是通过ssh到secondary_check_script定义的主机再次
进行检测失败后，方可认为master无法响应。这从一定程度上也防止脑裂的现象出现。





By default, masterha_manager runs in foreground. You can run the masterha_manager program in background as below.
  manager_host$ nohup masterha_manager --conf=/etc/app1.cnf < /dev/null > /var/log/masterha/app1/app1.log 2>&1 &
Set nohup, and make sure that masterha_manager does not read/write from/to STDIN, STDOUT and STDERR.



If you create a file at /etc/masterha_default.cnf, MHA Manager scripts automatically reads the file as a global configuration file.
Application-scope parameters should be written in [server default] block. In [serverN] blocks, you should set local-scope parameters.
hostname is mandatory local-scope parameter so has to be written here. Block name should start from "server". 
Internally server configurations are sorted by block name, and sorted order matters when MHA decides new master


----------------------------------------------------------------------------------------------------------------------------------


角色：

192.168.1.2            lvs backup
192.168.1.4            lvs master
192.168.1.8            atlas2
192.168.1.10           atlas1
192.168.1.11           mysql slave2
192.168.1.12           mysql slave1
192.168.1.13           mysql maser
192.168.1.14           mha manger


配置ssh无密码登录，192.168.1.14到所有机器，以便mha和ansible使用。

1,安装perl mysql 
yum install perl-DBD-MySQL -y

2，安装mha
mha4mysql-node-0.54-0.el6.noarch.rpm
mha4mysql-manager-0.55-0.el6.noarch.rpm 
需要的perl依赖：
yum install perl-Time-HiRes.x86_64 perl-Parallel-ForkManager.noarch perl-Log-Dispatch-FileRotate.noarch perl-Log-Dispatch-Configurator-Any.noarch perl-Log-Dispatch-Array.noarch perl-Log-Dispatch.noarch perl-Log-Dispatch-Perl.noarch perl-Log-Dispatch-Config.noarch perl-Config-Tiny.noarch

3，配置各mysql机器 ssh无密码登录

4，搭建mysql复制拓扑


下载资源 ：
http://www.chocolee.cn/download/mha/
