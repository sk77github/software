mysqldump：

--single-transaction
快照读，基于RR隔离级别显示开启事务然后select，dump的是开启事务也就是备份开始时的那个时间点的快照（使用mvcc，读undo log里的版本）
dump时其他连接不可以使用这些命令： ALTER TABLE, CREATE TABLE, DROP TABLE, RENAME TABLE, TRUNCATE TABLE. 
To dump large tables, combine the --single-transaction option with the --quick option.

--master-data
 It causes the dump output to include a CHANGE MASTER TO statement that indicates the binary log coordinates (file name and position) 
 of the dumped server. 



--------------------------------------------------------------------------------------------------------------------------
mha:
https://code.google.com/p/mysql-master-ha/wiki/TableOfContents?tm=6
http://www.slideshare.net/matsunobu/automated-master-failover

https://github.com/ovaistariq/mha-helper
http://www.ovaistariq.net/911/extend-mysql-master-ha-mha-capabilities-with-mha-helper/#.Vw-WsPl97IU




--------------------------------------------------------------------------------------------------------------------------------


mysqlbinlog

mysqladmin




mysqlpump
mk-slave-prefetch

----------------------------------------------------------------------------------------------------
percona的工具集
pt-query-digest
pt-kill

安装：
wget https://www.percona.com/downloads/percona-toolkit/2.2.14/RPM/percona-toolkit-2.2.14-1.noarch.rpm
    如果：
    error: Failed dependencies:
        perl(IO::Socket::SSL) is needed by percona-toolkit-2.2.14-1.noarch
        perl(Term::ReadKey) is needed by percona-toolkit-2.2.14-1.noarch
 yum install perl-IO-Socket-SSL（一般perl的依赖，直接把perl(IO::Socket::SSL)用连字符接上即可）
 wget http://pkgs.repoforge.org/perl-TermReadKey/perl-TermReadKey-2.30-3.el6.rfx.x86_64.rpm
 rpm -ivh perl-TermReadKey-2.30-3.el6.rfx.x86_64.rpm
 rpm -ivh percona-toolkit-2.2.14-1.noarch.rpm
 rpm -ql percona-toolkit（查看安装分布）
 
 
 使用：
 http://www.cnblogs.com/zhoujinyi/archive/2013/05/09/3067045.html
 
 ------------------------------------------------------------------------------------------------------------------------
 运维类：
 
 pt-table-checksum:
 检查主从一致性
 pt-table-checksum --nocheck-replication-filters --chunk-size=1000000 --no-check-binlog-format --replicate=sps.checksums 
 --databases=xxx h=127.0.0.1,u=root,p=123456,P=3306  
 
 
pt-online-schema-change：
在线更改表结构，不锁表
使用风险：
一定要阅读了工具的文档，知道工具的原理，限制，工具的工作过程
查看一下工具已知的bug列表，做到心中有数
在准生产环境上测试一遍工具，预跑一下
在生产环境上操作时，先备份先生产环境的数据（对于数据的备份是一直要做且有的，且验证备份）

例子：
pt-online-schema-change [OPTIONS] DSN
options 可以自行查看 help， DNS 为你要操作的数据库和表。
--dry-run and --execute 是互斥的，不可同时使用。

–execute 这个参数的作用和工作原理的介绍的一样，会建立触发器，来保证最新变更的数据会影响至新表。
注意：如果不加这个参数，这个工具会在执行一些检查后退出。这一举措是为了让使用这充分了解了这个工具的原理，同时阅读了官方文档。

使用示例：
范例 1： 在线更改表的的引擎，这个尤其在整理 innodb 表的时候非常有用，示例如下：
pt-online-schema-change --user=root --password=hugnew --host=localhost
                        --lock-wait-time=120 --alter="ENGINE=InnoDB" D=test,t=oss_pvinfo2 --execute
范例 2： 大表添加字段的，语句如下:
pt-online-schema-change --user=root --password=hugnew --host=localhost 
                        --lock-wait-time=120 --alter="ADD COLUMN domain_id INT" D=test,t=oss_pvinfo2 --execute
 
 
 
 --------------------------------------------------------------------------------------------------------------------
 监控类：
 
 ----------------------------------------------------------------------------------------------------------------------
 性能优化类：

pt-visual-explain
格式化 explain 出来的执行计划按照tree 方式输出，方便阅读。

pt-variable-advisor
分析 mysql 的参数变量，并对可能存在的问题提出建议
 
 ------------------------------------------------------------------------------------------------------------------------
 实用方便类：
 
pt-show-grants
规范化和打印mysql 权限，让你在复制、比较mysql 权限以及进行版本控制的时候更有效率！
 
 
 pt-duplicate-key-checker
 检查重复索引和外键
 
pt-summary:
  打印出来的信息包括：CPU、内存、硬盘、网卡等信息，还包括文件系统、磁盘调度和队列大小、LVM、RAID、网络链接信息、netstat 的统计，
  以及前10的负载占用信息和vmstat信息。
  
  
pt-mysql-summary --user=root --password=123456 --host=192.168.200.25 --port=3306
  打印出来的信息包括：版本信息、数据目录、命令的统计、用户，数据库以及复制等信息还包括各个变量（status、variables）信息和
  各个变量的比例信息，还有配置文件等信息。

---------------------------------------------------------------------------------------------------------

自动化审核
inception

安装：
yum -y install cmake  libncurses5-dev libssl-dev g++ bison openssl-devel.x86_64 git ncurses-devel
git  clone https://github.com/mysql-inception/inception.git
./inception_build.sh debug（指定为debug目录）  

启动：
nohup ./Inception --port=6669 &
登录验证：
mysql -uroot -h127.0.0.1 -P6669 
inception get variables;

----------------------------------------------------
inception web

安装：
需要Python2.7环境
git clone https://github.com/dbalihui/inception_web.git
pip install flask_wtf flask-script flask-debugtoolbar MySQL-python argparse
修改配置 app/inception.py 

启动：
./run.py runserver --host 0.0.0.0

------------------------------------------------------------------------------------------------------------------------------

复制拓扑可视化
https://github.com/outbrain/orchestrator

异构数据同步：
https://github.com/siddontang/go-mysql
