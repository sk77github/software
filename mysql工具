mysqldump：

--single-transaction
快照读，基于RR隔离级别显示开启事务然后select，dump的是开启事务也就是备份开始时的那个时间点的快照（使用mvcc，读undo log里的版本）
dump时其他连接不可以使用这些命令： ALTER TABLE, CREATE TABLE, DROP TABLE, RENAME TABLE, TRUNCATE TABLE. 
To dump large tables, combine the --single-transaction option with the --quick option.

--master-data
 It causes the dump output to include a CHANGE MASTER TO statement that indicates the binary log coordinates (file name and position) 
 of the dumped server. 



--------------------------------------------------------------------------------------------------------------------------
mha:
https://code.google.com/p/mysql-master-ha/wiki/TableOfContents?tm=6
http://www.slideshare.net/matsunobu/automated-master-failover

https://github.com/ovaistariq/mha-helper
http://www.ovaistariq.net/911/extend-mysql-master-ha-mha-capabilities-with-mha-helper/#.Vw-WsPl97IU




--------------------------------------------------------------------------------------------------------------------------------


mysqlbinlog

mysqladmin




mysqlpump
mk-slave-prefetch

----------------------------------------------------------------------------------------------------
percona的工具集
pt-duplicate-key-checker
pt-online-schema-change
pt-query-digest
pt-table-checksum
pt-kill
安装：
wget https://www.percona.com/downloads/percona-toolkit/2.2.14/RPM/percona-toolkit-2.2.14-1.noarch.rpm
    如果：
    error: Failed dependencies:
        perl(IO::Socket::SSL) is needed by percona-toolkit-2.2.14-1.noarch
        perl(Term::ReadKey) is needed by percona-toolkit-2.2.14-1.noarch
 yum install perl-IO-Socket-SSL（一般perl的依赖，直接把perl(IO::Socket::SSL)用连字符接上即可）
 wget http://pkgs.repoforge.org/perl-TermReadKey/perl-TermReadKey-2.30-3.el6.rfx.x86_64.rpm
 rpm -ivh perl-TermReadKey-2.30-3.el6.rfx.x86_64.rpm
 rpm -ivh percona-toolkit-2.2.14-1.noarch.rpm
 rpm -ql percona-toolkit（查看安装分布）
 
 使用：
 http://www.cnblogs.com/zhoujinyi/archive/2013/05/09/3067045.html
---------------------------------------------------------------------------------------------------------


自动化审核
inception

复制拓扑可视化
https://github.com/outbrain/orchestrator

异构数据同步：
https://github.com/siddontang/go-mysql
