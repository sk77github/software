并发，性能（响应时间，同步复制响应时间很长，降低并发，但并发可通过sharding分担），分区容忍，一致性，可用性
容量规划，sharding，成本（如果机器足够多，内存足够大，使用共享存储，多机房多活，sharding的足够细，这些成本可接受，
那么把容量规划到始终留有大的余地，这样上面第一行的所有问题，都可解决）


数据是否允许丢失？
业务读写比是怎样的？
业务需要事务吗？
业务高峰有多大并发？（落实到qps，tps，iops）
业务需要的响应时间是多长？
业务数据需要强一致性吗？
业务需要高可用吗？
业务需要多大的磁盘存储空间？
业务热点数据有多大？（需要多大缓存和多大内存）
业务可根据时间归档吗？
业务要求一定要串行执行吗？
可以异步展示，最终一致吗？

业务的常规读，会影响多少行数据
业务的常规写，会影响到多少行数据
