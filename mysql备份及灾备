
备份binlog
http://dev.mysql.com/doc/refman/5.6/en/mysqlbinlog-backup.html


------------------------------------------------------------------------------------------------------
灾备：
基于主键合并mysql binlog的event（牺牲了slave实时一致性的同步回访，因为是灾备，不提供线上服务，所以最终一致性即可）
同步复制，返回给用户慢，但一旦返回给用户，就最少有两份数据落盘。
异步复制，返回给用户快，但因为是异步的，在某个时序序列里宕机，那么必然有数据丢失。
半同步复制，如果是收到slave的ack，master在commit返回给用户，那么数据无丢失。如果先commit返回给用户，后接受ack就会丢数据。

--------------------------------------------------------------------------------------------------------------------
xtrabackup备份：

backup，备份阶段，追踪事务日志和复制数据文件（物理备份）。
preparing，重放事务日志，使所有的数据处于同一个时间点，达到一致性状态。

详细过程：
innobackupex 在启动后，会先 fork 一个进程，启动 xtrabackup进程，然后就等待 xtrabackup 备份完 ibd 数据文件；
xtrabackup 在备份 InnoDB 相关数据时，是有2种线程的，1种是 redo 拷贝线程，负责拷贝 redo 文件，1种是 ibd 拷贝线程，负责拷贝 ibd 文件；redo 拷贝线程只有一个，在 ibd 拷贝线程之前启动，在 ibd 线程结束后结束。xtrabackup 进程开始执行后，先启动 redo 拷贝线程，从最新的 checkpoint 点开始顺序拷贝 redo 日志；然后再启动 ibd 数据拷贝线程，在 xtrabackup 拷贝 ibd 过程中，innobackupex 进程一直处于等待状态（等待文件被创建）。
xtrabackup 拷贝完成idb后，通知 innobackupex（通过创建文件），同时自己进入等待（redo 线程仍然继续拷贝）;
innobackupex 收到 xtrabackup 通知后，执行FLUSH TABLES WITH READ LOCK (FTWRL)，取得一致性位点，然后开始备份非 InnoDB 文件（包括 frm、MYD、MYI、CSV、opt、par等）。拷贝非 InnoDB 文件过程中，因为数据库处于全局只读状态，如果在业务的主库备份的话，要特别小心，非 InnoDB 表（主要是MyISAM）比较多的话整库只读时间就会比较长，这个影响一定要评估到。
当 innobackupex 拷贝完所有非 InnoDB 表文件后，通知 xtrabackup（通过删文件） ，同时自己进入等待（等待另一个文件被创建）；
xtrabackup 收到 innobackupex 备份完非 InnoDB 通知后，就停止 redo 拷贝线程，然后通知 innobackupex redo log 拷贝完成（通过创建文件）；
innobackupex 收到 redo 备份完成通知后，就开始解锁，执行 UNLOCK TABLES；
最后 innobackupex 和 xtrabackup 进程各自完成收尾工作，如资源的释放、写备份元数据信息等，innobackupex 等待 xtrabackup 子进程结束后退出。

---------------------------------------------------------------------------------------------------------------------
安装：
wget https://www.percona.com/downloads/XtraBackup/Percona-XtraBackup-2.4.3/binary/redhat/6/x86_64/percona-xtrabackup-24-2.4.3-1.el6.x86_64.rpm
yum -y install perl perl-devel libaio libaio-devel perl-Time-HiRes perl-DBD-MySQL
rpm -ivh percona-xtrabackup-24-2.4.3-1.el6.x86_64.rpm
（如果报：
   libev.so.4()(64bit) is needed
 ）
 wget ftp://rpmfind.net/linux/dag/redhat/el6/en/x86_64/dag/RPMS/libev-4.15-1.el6.rf.x86_64.rpm
 rpm -ivh libev-4.15-1.el6.rf.x86_64.rpm
 rpm -ivh percona-xtrabackup-24-2.4.3-1.el6.x86_64.rpm    
--------------------------------------------------------------------------------------------------------------------------------
使用：
参数选项列表：https://www.percona.com/doc/percona-xtrabackup/2.4/innobackupex/innobackupex_option_reference.html

1，备份
第一步：copy数据阶段
innobackupex --defaults-file=/etc/my.cnf（必须放在第一个，将读取当前运行这个命令的机器的/etc/my.cnf而不是远程机器的/etc/my.cnf）  
             --user=root --password=kingshard --host=xxx --databases=xtra_test（要备份的库）  /root/xtrabackup/（备份到目标目录）
上一行命令执行完后，会在/root/xtrabackup/目录下生成，2016-06-28_16-39-09目录，目录包含：
backup-my.cnf  ibdata1  xtrabackup_binlog_info  xtrabackup_checkpoints  xtrabackup_info  xtrabackup_logfile

第二步：重放事务日志
innobackupex --apply-log /root/xtrabackup/2016-06-28_16-39-09
重放后目录/root/xtrabackup/2016-06-28_16-39-09包含：
backup-my.cnf  ibdata1  ib_logfile0  ib_logfile1  ibtmp1  xtrabackup_binlog_info  xtrabackup_checkpoints  xtrabackup_info  xtrabackup_logfile
多出了，ib_logfile0  ib_logfile1  ibtmp1 这三个文件

2，还原

------------------------------------------------------------------------------------------------------------------------------------
